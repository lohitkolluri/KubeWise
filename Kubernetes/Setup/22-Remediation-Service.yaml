apiVersion: v1
kind: ConfigMap
metadata:
  name: remediation-config
  namespace: monitoring
data:
  config.json: |
    {
      "actions": [
        {
          "alert": "NodeDown",
          "action": "drain-node",
          "params": {
            "ignore-daemonsets": true,
            "delete-local-data": true
          }
        },
        {
          "alert": "ContainerOOMKilled",
          "action": "increase-resources",
          "params": {
            "resource": "memory",
            "increase_percentage": 20
          }
        },
        {
          "alert": "PodHighRestartRate",
          "action": "restart-deployment",
          "params": {
            "capture_logs": true
          }
        },
        {
          "alert": "NodeDiskSpaceCritical",
          "action": "cleanup-node",
          "params": {
            "delete_old_logs": true,
            "delete_evicted_pods": true,
            "prune_docker_images": true
          }
        }
      ]
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: remediation-service
  namespace: monitoring
  labels:
    app: remediation-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: remediation-service
  template:
    metadata:
      labels:
        app: remediation-service
    spec:
      serviceAccountName: remediation-service
      containers:
      - name: remediation-service
        image: kubewise/remediation-service:latest
        # Production-ready remediation service
        env:
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: kubewise-secrets
              key: mongo-uri
        - name: MONGO_DB_NAME
          value: "kubewise"
        - name: LOG_LEVEL
          value: "INFO"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: remediation-config
          mountPath: /etc/remediation
      volumes:
      - name: remediation-config
        configMap:
          name: remediation-config
---
apiVersion: v1
kind: Service
metadata:
  name: remediation-service
  namespace: monitoring
  labels:
    app: remediation-service
spec:
  selector:
    app: remediation-service
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: remediation-service
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: remediation-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "delete", "patch"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["pods/log"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: remediation-role-binding
subjects:
- kind: ServiceAccount
  name: remediation-service
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: remediation-role
  apiGroup: rbac.authorization.k8s.io 