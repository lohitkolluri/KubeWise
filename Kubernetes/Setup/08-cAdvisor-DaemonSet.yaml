apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cadvisor
  namespace: monitoring
  labels:
    app: cadvisor
spec:
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      # Run on all nodes
      tolerations:
      - operator: Exists
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor:v0.47.2  # Latest stable version
        securityContext:
          privileged: true  # Required for full container monitoring capabilities
        command: ["/bin/sh", "-c"]
        args:
          - |
            sleep 5;
            /usr/bin/cadvisor \
            --docker_only=false \
            --housekeeping_interval=10s \
            --store_container_labels=true \
            --whitelisted_container_labels=io.kubernetes.container.name,io.kubernetes.pod.namespace,io.kubernetes.pod.name,io.kubernetes.pod.uid,io.kubernetes.container.restartCount \
            --disable_metrics=percpu,hugetlb,sched,tcp,udp,advtcp \
            --event_storage_event_limit=default=0 \
            --event_storage_age_limit=default=0 \
            --allow_dynamic_housekeeping=true \
            --containerd=/run/containerd/containerd.sock
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            memory: "200Mi"
            cpu: "25m"
          limits:
            memory: "400Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        - name: var-run
          mountPath: /var/run
          readOnly: false
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: docker
          mountPath: /var/lib/docker
          readOnly: true
        - name: containerd
          mountPath: /run/containerd
          readOnly: true
        - name: disk
          mountPath: /dev/disk
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: docker
        hostPath:
          path: /var/lib/docker
      - name: containerd
        hostPath:
          path: /run/containerd
      - name: disk
        hostPath:
          path: /dev/disk
